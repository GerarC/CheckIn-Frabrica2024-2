/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.springdoc.openapi-gradle-plugin" version "1.9.0"
    id "org.sonarqube" version "4.4.1.3373"
    id 'jacoco'
}

group = 'com.fabrica'
version = '0.0.1-SNAPSHOT'
description = 'CheckIn'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '3.3.4'

    compileOnly 'org.projectlombok:lombok'
    compileOnly "com.h2database:h2:2.3.232"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-graphql', version: '3.3.4'

    testImplementation group: 'com.h2database', name: 'h2', version: '2.3.232'
    testImplementation 'org.springframework.graphql:spring-graphql-test:1.3.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation group: 'org.springframework', name: 'spring-webflux', version: '6.1.14'
}

tasks.named('test') {
    useJUnitPlatform()
}

def jacocoExclude = [
        "**/swagger/*",
        "**/configuration/initialization/*"
]

test {
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.12"
}


jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExclude)
        }))
    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            excludes = jacocoExclude
            limit {
                minimum = 0.3
            }
        }
    }
}

sonar {
    properties {
        property "sonar.gradle.skipCompile", "true"
        property "sonar.projectKey", "GerarC_CheckIn-Frabrica2024-2"
        property "sonar.organization", "gerarc"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.qualitygate.wait", "true"
    }
}
